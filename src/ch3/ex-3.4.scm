(define (make-account balance password)
  (define (make-sentinel limit)
    (define count 0)
    (define (call-the-cops)
      (if (> count limit)
        (error "Call The Cops" count)
        (begin
          (set! count (+ count 1))
          (error "Invalid Password" count))))
    (define (reset) (set! count 0))
    (define (dispatch m)
      (cond ((eq? m 'invalid) (call-the-cops))
            ((eq? m 'valid) (reset))
            (else (error "Unknown request: MAKE-SENTINEL"))))
    dispatch)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance 
                     (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (valid-password? input-password)
    (eq? password input-password))
  (define (get-method m)
    (cond ((eq? m 'withdraw) withdraw)
          ((eq? m 'deposit) deposit)
          (else (error "Unknown request: MAKE-ACCOUNT" m))))
  (define (dispatch)
    (define sentinel (make-sentinel 7))
    (lambda (input-password m)
      (if (valid-password? input-password)
      (begin
        (sentinel 'valid)
        (get-method m))
      (sentinel 'invalid))))
  (dispatch))

(define acc (make-account 100 'secret-password))

((acc 'secret-password 'withdraw) 40)

((acc 'some-other-password 'deposit) 50)
